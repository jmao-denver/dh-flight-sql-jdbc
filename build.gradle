plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
//    id 'io.deephaven.enterprise.project.common-conventions'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    maven {
        credentials {
            username = artifactoryUser ?: System.getProperty('user.name')
            password = artifactoryAPIKey ?: ''
        }
        url "https://illumon.jfrog.io/illumon/libs-customer"
    }
}

description = 'Deephaven Enterprise Flight SQL JDBC Driver'

def dheVersion = "1.20240517.501"
def dhcVersion = "0.39.5" +
        ""
dependencies {
    api platform(libs.deephaven.bom)

    // Uses grizzly iris clients, works, still fishlib configuration, override by HttpUrlPropertyInputStreamLoader honored
    implementation "iris:client-flight:$dheVersion"
    implementation "iris:client-base:$dheVersion"
    implementation "iris:AuthLib:$dheVersion"
    implementation "iris:ControllerClientGrpc:$dheVersion"

    // Uses sanluis core+ clients, "io.deephaven.configuration.PropertyInputStreamLoader.override" not honored
//    implementation project(":JavaClient")
//    implementation project(path: ":EnterpriseShadowed", configuration: "shadow")

    // Uses grizzly core+ clients, fishlib override honored, but Core config load failed
//     implementation("io.deephaven.dnd:JavaClient:0.39.5-1.20240517.501")
//     implementation("io.deephaven.dnd:EnterpriseShadowed:0.39.5-1.20240517.501")


    implementation libs.deephaven.configuration

    implementation libs.apache.calcite.avatica
    implementation libs.arrow.flight.sql
    implementation libs.github.ben.manes
    implementation "org.bouncycastle:bcpkix-jdk18on:1.80"

    // Use JUnit Jupiter for testing.
    testImplementation platform(libs.junit.bom)
    testImplementation libs.junit.jupiter
    testRuntimeOnly libs.junit.platform.launcher
    testRuntimeOnly libs.junit.jupiter.engine
    testRuntimeOnly "io.deephaven:deephaven-log-to-slf4j:${dhcVersion}"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs = [
        "-DConfiguration.rootFile=iris-common.prop",
        "--add-opens=java.base/java.nio=ALL-UNNAMED"
    ]
}

